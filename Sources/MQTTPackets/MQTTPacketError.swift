//===----------------------------------------------------------------------===//
//
// This source file is part of the MQTTNIO project
//
// Copyright (c) 2020-2021 Adam Fowler
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

/// Errors generated by bad packets sent by the client
public struct MQTTPacketError: Error, Equatable {
    /// Packet sent contained invalid entries
    public static var badParameter: MQTTPacketError { .init(error: .badParameter) }
    /// QoS is not accepted by this connection as it is greater than the accepted value
    public static var qosInvalid: MQTTPacketError { .init(error: .qosInvalid) }
    /// publish messages on this connection do not support the retain flag
    public static var retainUnavailable: MQTTPacketError { .init(error: .retainUnavailable) }
    /// subscribe/unsubscribe packet requires at least one topic
    public static var atLeastOneTopicRequired: MQTTPacketError { .init(error: .atLeastOneTopicRequired) }
    /// topic alias is greater than server maximum topic alias or the alias is zero
    public static var topicAliasOutOfRange: MQTTPacketError { .init(error: .topicAliasOutOfRange) }
    /// invalid topic name
    public static var invalidTopicName: MQTTPacketError { .init(error: .invalidTopicName) }
    /// client to server publish packets cannot include a subscription identifier
    public static var publishIncludesSubscription: MQTTPacketError { .init(error: .publishIncludesSubscription) }

    private enum _Error {
        case badParameter
        case qosInvalid
        case retainUnavailable
        case atLeastOneTopicRequired
        case topicAliasOutOfRange
        case invalidTopicName
        case publishIncludesSubscription
    }

    private let error: _Error
}
